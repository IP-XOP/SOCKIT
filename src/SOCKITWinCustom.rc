/*
@copyright: Andrew Nelson and the Australian Nuclear Science and Technology Organisation 2021.
*/

#include "XOPResources.h"			// Defines XOP-specific symbols.

1100 STR#							// Custom error messages.
BEGIN
/* [1] */
		"SOCKIT requires Igor Pro 8.00 or later.\0",
		/* [2] */
		"No winsock lib available.\0",
		/* [3] */
		"Input string is non-existent.\0",
        /* [4] */
        "Unable to resolve host.\0",
        /* [5] */
        "Unable to allocate socket.\0",
        /* [6] */
        "Unable to connect to server.\0",
        /* [7] */
        "Unable to send data to server.\0",
		/* [8] */
		"Wave in use.\0",
		/* [9] */
		"Socket not connected to anything.\0",
		/* [10] */
		"Processor function not compiled, or not available.\0",
		/* [11] */
		"Problem writing to file.\0",
		/* [12] */
		"No socket with that descriptor.\0",
		/* [13] */
		"Couldn't start a thread to read incoming messages.\0",
		/* [14] */
		"The supplied string is not an exact multiple of the bytes required for that wavetype.\0",
		/* [15] */
		"Could not acquire mutex lock.\0",
		/* [16] */
		"Couldn't find wavebufferinfo.\0",
		/* [17] */
		"Couldn't open logfile.\0",

	0,								// NOTE: 0 required to terminate the resource.
END

1101 STR#							// Misc strings that Igor looks for.
BEGIN
	"-1\0",							// -1 means we don't want to add a menu item via STR# 1101. We add it via the XMI1 reource.
	"---\0",						// IGOR ignores item 2 because item 1 is -1.
	"SOCKIT Help\0",			// Name of XOP's help file.
	"\0"							// NOTE: NULL required to terminate the resource.
END

1100 XOPI                           // XOPI - Describes general XOP properties to IGOR.
BEGIN
    XOP_VERSION,                    // Version number of host XOP system.
    DEV_SYS_CODE,                   // Code for development system used to make XOP.
    XOP_FEATURE_FLAGS,              // Tells Igor about XOP features
    XOPI_RESERVED,                  // Reserved - must be zero.
    XOP_TOOLKIT_VERSION             // XOP Toolkit version.
END


1100 XOPF							// Describes functions added by XOP to IGOR.
BEGIN
		"SOCKITcloseConnection\0",
		F_IO | F_THREADSAFE | F_EXTERNAL,
		NT_FP64,
	       	NT_FP64,
    	   	0,
		"SOCKITisItOpen\0",
		F_IO | F_THREADSAFE | F_EXTERNAL,
		NT_FP64,
    		  NT_FP64,
		      0,
		"SOCKITregisterProcessor\0",							/* function name */
		F_IO | F_EXTERNAL,					/* function category (string) */
		NT_FP64,						/* return value type */
			NT_FP64,						/* socket number */
			HSTRING_TYPE,					/* processor */
			0,
		"SOCKITpeek\0",							/* function name */
		F_IO | F_THREADSAFE | F_EXTERNAL,					/* function category (string) */
		HSTRING_TYPE,						/* return value type */
			NT_FP64,						/* socket number */
			0,
		"SOCKITsendmsgF\0",							/* function name */
		F_IO | F_THREADSAFE | F_EXTERNAL,					/* function category (string) */
		NT_FP64,						/* return value type */
			NT_FP64,						/* socket number */
			HSTRING_TYPE,
			0,
		"SOCKITsendnrecvF\0",							/* function name */
		F_IO | F_THREADSAFE | F_EXTERNAL,					/* function category (string) */
		HSTRING_TYPE,						/* return value type */
			NT_FP64,						/* socket number */
			HSTRING_TYPE,
			NT_FP64,
			NT_FP64,
			0,
		"SOCKITopenconnectionF\0",							/* function name */
		F_IO | F_THREADSAFE | F_EXTERNAL,					/* function category (string) */
		NT_FP64,						/* return value type */
			HSTRING_TYPE,
			NT_FP64,
			NT_FP64,
			0,
		"SOCKITtotalOpened\0",							/* function name */
		F_IO | F_EXTERNAL,					/* function category (string) */
		NT_FP64,						/* return value type */
			0,
		"SOCKITcurrentOpened\0",							/* function name */
		F_IO | F_EXTERNAL,					/* function category (string) */
		NT_FP64,						/* return value type */
			0,
		"SOCKITinfo\0",							/* function name */
		F_IO | F_EXTERNAL | F_THREADSAFE,					/* function category (string) */
		HSTRING_TYPE,						/* return value type */
		    NT_FP64,
			0,
        0,
END

1100 XOPC							// Describes operations that the XOP adds to IGOR.
BEGIN
	"SOCKITopenconnection\0",
	utilOp | XOPOp | compilableOp,
	"SOCKITsendnrecv\0",
	utilOp | XOPOp | compilableOp,
	"SOCKITsendmsg\0",
	utilOp | XOPOp | compilableOp,
	"SOCKITstringtoWave\0",
	utilOp | XOPOp | compilableOp | threadSafeOp,
	"SOCKITwaveToString\0",
	utilOp | XOPOp | compilableOp | threadSafeOp,
	"SOCKITlist\0",
	utilOp | XOPOp | compilableOp,
	// NOTE: NULL required to terminate the resource.
    "\0"
END
